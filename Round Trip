// हौसला दिलाएगा मंज़िल  
 
#include<bits/stdc++.h>
 
using namespace std;
#define int long long
const int mod = 998244353;
#define F first
#define S second
#define pb push_back
 
const int N = 2e5+1;
 
 
template<typename... T>
void debug(T&... args){
  cout << "\n==================\n";
  ((cout<< args<<", "), ...);
  cout << "\n==================\n";
}
template<typename T>
void debug(vector<T>& a){
  cout << "\n==============\n";
  for(auto& e:a)cout << e << ' ';
  cout << "\n==============\n";
}

bool f = false;
vector<int>ans;

void dfs(int node , int p ,vector<vector<int> >& adj, vector<bool>&vis){
    if(f)return ;
    if(vis[node] ){
      f= true; ans.push_back(node);return ;
    }
   
    vis[node] = true;
    for(auto& e:adj[node]){
      if(e!=p)dfs(e, node, adj, vis);
    }

    if(f && !(ans.back()==ans[0] and ans.size()>1)){
      ans.push_back(node);
    }
}

void solve(){
  int n,m; cin >> n >> m;

  vector<vector<int>>adj(n);
  
  for(int i =0 ;i<m ; i++){
    int a,b; cin >> a >> b; a--; b--;adj[a].push_back(b); adj[b].push_back(a);
  }   
  
  vector<bool>vis(n,false);
  for(int i =0 ; i<n ; i++)if(!vis[i] and !f)dfs(i , i ,adj, vis);
   if(!f){
       cout << "IMPOSSIBLE\n";return ;
   }
   cout << ans.size() << '\n';
  for(auto& e:ans){
    cout << e +1<< ' ';
  }
}

signed main(){
  // ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
  // int t; cin>> t; while(t--)
  solve();
}
