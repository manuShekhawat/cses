// हौसला दिलाएगा मंज़िल  
 
#include<bits/stdc++.h>
 
using namespace std;
#define int long long
const int mod = 998244353;
#define F first
#define S second
#define pb push_back
 
const int N = 2e5+1;
 
 
template<typename... T>
void debug(T&... args){
  cout << "\n==================\n";
  ((cout<< args<<", "), ...);
  cout << "\n==================\n";
}
template<typename T>
void debug(vector<T>& a){
  cout << "\n==============\n";
  for(auto& e:a)cout << e << ' ';
  cout << "\n==============\n";
}
 
template<typename... T>
void put(T&... args) { ((cout << args << " "), ...);}

int n,m;

bool isValid(int i , int j , vector<string>& a){
  if(i<n and i>=0 and j<m and j>=0 and (a[i][j]=='.' or a[i][j]=='B'))return true;
  else return false;
}

pair<int,int> cvt(char c){
  if(c =='U'){
    return {1,0};
  }
  else if(c == 'D')return {-1,0};
  else if(c=='L')return {0,1};
  else if(c=='R')return {0,-1};
  else return {0,0};
}
vector<char>ans;
void trace(tuple<int,int,char> final , vector<vector<char> >& dir){
     char c = get<2>(final);
     pair<int,int> crd = {get<0>(final) , get<1>(final)};
     while(1){
       pair<int,int>p = cvt(c);
       ans.push_back(c);
       if(c == '\0')return;
       crd = {crd.first + p.first , crd.second + p.second};
       c = dir[crd.first][crd.second];
     }
}

void solve(){
    ; cin >> n >> m;

    vector<string>a(n);
    vector<vector<char> >dir(n, vector<char>(m , '#'));

    for(int i = 0 ;i<n ; i++)cin>> a[i];

    queue<tuple<int,int,char> >q; 

    for(int i = 0; i<n ; i++){
      for(int j = 0; j<m ; j++){
        if(a[i][j] == 'A'){
            q.push({i,j , '\0'});  dir[i][j] = '\0';break;         
        }
      }
    }     
   tuple<int,int,char> final; bool fnd = false;
    while(q.size()){
      tuple<int,int,char> curr = q.front();
      dir[get<0>(curr)][get<1>(curr)] = get<2>(curr);
      if(a[get<0>(curr)][get<1>(curr)]=='B'){
        final = curr; fnd = true;break;
      }
       a[get<0>(curr)][get<1>(curr)] = '#';
      if(isValid(get<0>(curr)+1,get<1>(curr), a)){q.push({get<0>(curr)+1,get<1>(curr), 'D'});}
      if(isValid(get<0>(curr)-1 , get<1>(curr) ,a )){q.push({get<0>(curr)-1 , get<1>(curr),'U'});}
      if(isValid(get<0>(curr) , get<1>(curr)+1,a )){q.push({get<0>(curr), get<1>(curr)+1 , 'R'});};
      if(isValid(get<0>(curr) , get<1>(curr)-1,a )){q.push({get<0>(curr), get<1>(curr)-1,'L'});}

      q.pop();
    }
   if(!fnd){
     cout << "NO\n";return ;
   }
    trace(final,dir);
    reverse(ans.begin() , ans.end());
     cout << "YES\n";
     cout << ans.size()-1 << '\n';
      for(int i =1  ; i<ans.size() ; i++){
        cout << ans[i] ;
      }
}
 
signed main(){
  ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
  // int t; cin>> t; while(t--)
  solve();
}
